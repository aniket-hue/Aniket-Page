{"version":3,"sources":["component/Cards/Card/Card.module.css","component/Badge/Badge.module.css","component/Icon/Icon/Icon.module.css","component/Icon/Icons.module.css","assets/git.svg","assets/face.svg","assets/lin.svg","component/Links/Links.module.css","component/Cards/Cards.module.css","component/Icon/Icon/icon.js","component/Icon/Icons.js","component/Badge/Badge.js","component/Links/Links.js","component/Cards/Card/Card.js","component/Cards/Cards.js","component/Chart/Chart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","icon","props","link","nameW","href","target","className","classes","img","onMouseOver","clicked","onMouseOut","src","name","alt","icons","Github","Linkedin","Facebook","badge","logo","text1","text","texth1","p","links","container","onClick","projects","card","console","log","box","flex","h1","title","body","a","plink","cards","wrap","Card","chart","App","state","show","nameHandle","setState","showHandle","Badge","this","Icons","Links","Cards","Chart","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,IAAM,kBAAkB,UAAY,wBAAwB,KAAO,mBAAmB,GAAK,iBAAiB,EAAI,gBAAgB,MAAQ,oBAAoB,EAAI,kB,gBCAlLD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,EAAI,iBAAiB,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,OAAS,wB,oBCA9JD,EAAOC,QAAU,CAAC,IAAM,oB,gBCAxBD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCD1BD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCC3CD,EAAOC,QAAU,CAAC,UAAY,2B,gBCA9BD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,OAAS,sBAAsB,WAAW,wBAAwB,aAAa,4B,oOCqB7GC,EApBF,SAACC,GAEV,IAAIC,EAAO,GAQX,OANIA,EADgB,WAAhBD,EAAME,MACC,gCACc,aAAhBF,EAAME,MACJ,gDAEA,iDAGP,uBAAGC,KAAMF,EAAMG,OAAO,UAClB,yBAAKC,UAAaC,IAAQC,IACtBC,YAAa,kBAAMR,EAAMS,QAAQT,EAAME,QACvCQ,WAAY,kBAAMV,EAAMS,QAAQ,UAChCE,IAAKX,EAAMY,KAAMC,IAAI,Q,kECEtBC,EAZD,SAACd,GACX,OACI,yBAAKK,UAAWC,IAAQQ,OACpB,gCACI,kBAAC,EAAD,CAAMF,KAAMG,IAAQb,MAAM,SAASO,QAAST,EAAMS,UAClD,kBAAC,EAAD,CAAMG,KAAMI,IAAUd,MAAM,WAAWO,QAAST,EAAMS,UACtD,kBAAC,EAAD,CAAMG,KAAMK,IAAUf,MAAM,WAAWO,QAAST,EAAMS,a,gBCKvDS,EAhBD,SAAClB,GACX,OACI,6BACI,yBAAKK,UAAWC,IAAQa,MACpB,yBAAKd,UAAWC,IAAQc,OACpB,4BAAKpB,EAAMY,QAInB,yBAAKP,UAAWC,IAAQe,MACpB,wBAAIhB,UAAWC,IAAQgB,QAAvB,sBACA,uBAAGjB,UAAWC,IAAQiB,GAAtB,4C,iBCGDC,EAdD,SAACxB,GACX,OACI,6BACI,yBAAKK,UAAWC,IAAQmB,WACpB,wBAAIC,QAAS,kBAAM1B,EAAM2B,aAAzB,YADJ,2BAGI,iCAHJ,2BAKI,yC,iCCeDC,EAtBF,SAAC5B,GAEV,OADA6B,QAAQC,IAAI9B,GAGR,yBAAKK,UAAWC,IAAQyB,KACpB,yBAAK1B,UAAWC,IAAQmB,WACpB,yBAAKpB,UAAWC,IAAQ0B,MACpB,uBAAG3B,UAAWC,IAAQ2B,IAAKjC,EAAMkC,QAErC,yBAAK7B,UAAWC,IAAQ0B,MACpB,uBAAG3B,UAAWC,IAAQiB,GAAIvB,EAAMmC,KAAhC,MAEJ,yBAAK9B,UAAWC,IAAQ0B,MAAM,uBAAG7B,KAAMH,EAAMC,KAAMG,OAAO,UAAUC,UAAWC,IAAQ8B,GACnF,uBAAG/B,UAAWC,IAAQ+B,OAAtB,aCoBLC,EAjCD,SAACtC,GACX,OACI,yBAAKK,UAAWC,IAAQiC,MAEpB,kBAACC,EAAD,CACIN,MAAM,iBACNC,KAAK,8DACLlC,KAAK,mDAGT,kBAACuC,EAAD,CACIN,MAAM,sBACNC,KAAK,mHAELlC,KAAK,sDAGT,kBAACuC,EAAD,CACIN,MAAM,OACNC,KAAK,qIAGLlC,KAAK,gDAGT,kBAACuC,EAAD,CAAMN,MAAM,kBACRC,KAAK,8CACLlC,KAAK,oDClBNwC,G,YARD,WACV,OACI,gCC6BOC,E,4MA3BbC,MAAQ,CACN/B,KAAM,QACNgC,MAAM,G,EAGRC,WAAa,SAACjC,GACZ,EAAKkC,SAAS,CAAElC,KAAMA,K,EAGxBmC,WAAa,WACX,EAAKD,SAAS,CAAEF,MAAO,EAAKD,MAAMC,Q,uDAIlC,OACE,yBAAKvC,UAAU,aACb,kBAAC2C,EAAD,CAAOpC,KAAMqC,KAAKN,MAAM/B,OACxB,kBAACsC,EAAD,CAAOzC,QAASwC,KAAKJ,aACrB,kBAACM,EAAD,CAAOxB,SAAUsB,KAAKF,aAGrBE,KAAKN,MAAMC,KAAO,kBAACQ,EAAD,MAAY,KAC/B,kBAACC,EAAD,W,GAvBUC,IAAMC,WCKJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5C,QAAQ4C,MAAMA,EAAMC,c","file":"static/js/main.ae882465.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Card_box__2CeO0\",\"container\":\"Card_container__34t2u\",\"flex\":\"Card_flex__3Qu7j\",\"h1\":\"Card_h1__1Mrqv\",\"p\":\"Card_p__3nIXU\",\"plink\":\"Card_plink__3ISVI\",\"a\":\"Card_a__1-Ytv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Badge_logo__3HJEX\",\"p\":\"Badge_p__1PQPA\",\"text1\":\"Badge_text1__2f-kY\",\"head\":\"Badge_head__3njNv\",\"text\":\"Badge_text__3RQJ6\",\"texth1\":\"Badge_texth1__2rnf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Icon_img__2-G3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icons\":\"Icons_icons__2wURJ\"};","module.exports = __webpack_public_path__ + \"static/media/git.1bb02710.svg\";","module.exports = __webpack_public_path__ + \"static/media/face.51f42ec5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lin.5b238434.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Links_container__YaC6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Cards_wrap__2CVxB\",\"fadeIn\":\"Cards_fadeIn__dGcX9\",\"slide-up\":\"Cards_slide-up__wRum2\",\"slide-down\":\"Cards_slide-down__3izuB\"};","import React from 'react';\nimport classes from './Icon.module.css';\nconst icon = (props) => {\n    \n    let link = '';\n    if (props.nameW === 'Github')\n        link = 'https://github.com/aniket-hue';\n    else if (props.nameW === 'Facebook')\n        link = 'https://www.facebook.com/aniket.saxena.54379/';\n    else\n        link = 'https://www.linkedin.com/in/aniket-saxena1998/';\n    \n    return (\n        <a href={link} target=\"_blank\">\n            <img className = {classes.img}\n                onMouseOver={() => props.clicked(props.nameW)}\n                onMouseOut={() => props.clicked('Hello')}\n                src={props.name} alt=\"#\" />\n        </a>\n    )\n}\n\nexport default icon;","import React from 'react';\nimport Icon from './Icon/icon';\nimport classes from './Icons.module.css';\nimport Github from '../../assets/git.svg';\nimport Facebook from '../../assets/face.svg';\nimport Linkedin from '../../assets/lin.svg';\n\nconst icons = (props) => {\n    return (\n        <div className={classes.icons}>\n            <figure>\n                <Icon name={Github} nameW=\"Github\" clicked={props.clicked} />\n                <Icon name={Linkedin} nameW=\"Linkedin\" clicked={props.clicked} />\n                <Icon name={Facebook} nameW=\"Facebook\" clicked={props.clicked} />\n            </figure>\n        </div>\n    );\n}\n\nexport default icons;","import React from 'react';\nimport classes from './Badge.module.css'\nconst badge = (props) => {\n    return (\n        <div>\n            <div className={classes.logo}>\n                <div className={classes.text1}>\n                    <h1>{props.name}</h1>\n                </div>\n\n            </div>\n            <div className={classes.text}>\n                <h1 className={classes.texth1}>I'm Aniket Saxena </h1>\n                <p className={classes.p}>Developer | Sport Programmer | Reader</p>\n            </div>\n        </div>\n    )\n}\nexport default badge;","import React from 'react';\nimport classes from './Links.module.css'\nconst links = (props) => {\n    return (\n        <div >\n            <div className={classes.container}>\n                <h1 onClick={() => props.projects()}>PROJECTS</h1>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <h2>|</h2>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <h1>SKILLS</h1>\n            </div>\n        </div>\n    );\n}\n\nexport default links","import React from 'react';\nimport classes from './Card.module.css'\n\nconst card = (props) => {\n    console.log(props)\n    return (\n\n        <div className={classes.box}>\n            <div className={classes.container}>\n                <div className={classes.flex}>\n                    <p className={classes.h1}>{props.title}</p>\n                </div>\n                <div className={classes.flex}>\n                    <p className={classes.p}>{props.body} </p>\n                </div>\n                <div className={classes.flex}><a href={props.link} target=\"_blank \" className={classes.a}>\n                    <p className={classes.plink}>Code</p>\n                </a>\n\n                </div>\n            </div>\n        </div>\n\n    );\n}\nexport default card;","import React from 'react';\nimport classes from './Cards.module.css';\nimport Card from './Card/Card'\nconst cards = (props) => {\n    return (\n        <div className={classes.wrap} >\n\n            <Card\n                title='Burger Builder'\n                body='An online burger building multipage app. Built on React JS.'\n                link='https://github.com/aniket-hue/Burger-App-React'\n            />\n\n            <Card\n                title='Covid 19 Statistics'\n                body='A covid 19 statistics app which shows number of infected, deaths, and recovered. \n                Built with React JS, Chart JS.'\n                link='https://github.com/aniket-hue/Covid19-stats-React'\n            />\n\n            <Card\n                title='Blog'\n                body='A simple blog which features creation, updation and deletion of posts. And \n                you can also make your own profile \n                Built with Django.'\n                link='https://github.com/aniket-hue/Django---Blog'\n            />\n\n            <Card title='Markdown Editor'\n                body='A simple markdown editor. Built with React.'\n                link='https://github.com/aniket-hue/MarkDown-editor' />\n\n        </div>\n    );\n}\n\nexport default cards;","import SkillBar from 'react-skillbars';\nimport React from 'react';\nimport classes from './Chart.module.css';\n\nconst chart = () => {\n    return (\n        <div>\n            \n       </div>\n    );\n}\n\nexport default chart","import React from 'react';\nimport './App.css';\nimport Icons from './component/Icon/Icons';\nimport Badge from './component/Badge/Badge';\nimport Links from './component/Links/Links';\nimport Cards from './component/Cards/Cards'\nimport Chart from './component/Chart/Chart'\nclass App extends React.Component {\n  state = {\n    name: 'Hello',\n    show: false,\n  }\n\n  nameHandle = (name) => {\n    this.setState({ name: name });\n  }\n\n  showHandle = () => {\n    this.setState({ show: !this.state.show })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Badge name={this.state.name} />\n        <Icons clicked={this.nameHandle} />\n        <Links projects={this.showHandle} />\n\n\n        {this.state.show ? <Cards /> : null}\n        <Chart/>\n      </div >\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}